#import indexer.properties.defaults

#This booleans indicate what rpc interfaces will be available when starting the MultipleRpcSearcher.
rmiInterface=yes
xmlInterface=yes
#This boolean indicates if the MultipleRpcSearcher has to export a MultiIndexer or an Indexer.
isMultiIndexer=no

#A comma separeted list of modules to process the input data before reaching the Index. The Writer module is always present at
# the end of the pipe, and needs not to be specified. The first module in the list will be the first to process the input data.
# While specifying the modules, use their full name. The "LoggerModule is useful while debugging, and may be present in several
# places of the pipe.
Indexer.modules=com.flaptor.hounder.indexer.LoggerModule,com.flaptor.hounder.indexer.CommandsModule,com.flaptor.hounder.indexer.Writer

#There is a queue before the first module where all the request can be stored while waiting to be processed. When this queue get full,
# a "QUEUE_FULL" message is returned for all new requests (see the Indexer.java). This size should be large enough to hold all the received
# data while an indexer optimize is in progress (around 10 minutes, depending on the size of the index), but must be samall enough not
# to fill all the available memory of the javaVM.
#Indexer.maxQueueSize=1000

#A list of required fields can be specified, so any document not having at least those fields at the end of the pipeline, will be discarded.
Writer.fields=text

#Regularly, the index should be close to flush it, and a copy of it made. This variable controls how often that happens (in milliseconds)
IndexManager.updateInterval=300000

# This property is a comma-separated list of host:port formatted strings. 
# Each of the atoms of this list, represents an IRemoteIndexUpdater, waiting 
# for this indexer to push the generated indexes to it.
# If an atom does not have : inside, IndexLibrary assumes that the connection 
# has to be established on the default port. That port is the defined as port.base in 
# common.properties.
#
# This is an example :
#IndexLibrary.remoteIndexUpdaters=host1,host2:3333,host3:1099,host4
IndexLibrary.remoteIndexUpdaters=

XsltModule.file=t.xsl

#these lists control the connections accepted from clusterfest
#you can add many values with commas and use wildcards as in 192.168.*.* 
clustering.node.connections.accept=
clustering.node.connections.deny=
